<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Glass.Mapper.Sc</name>
    </assembly>
    <members>
        <member name="T:Glass.Mapper.Sc.CodeFirst.FieldInfo">
            <summary>
            Class FieldInfo
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.FieldInfo.#ctor(Sitecore.Data.ID,Sitecore.Data.ID,System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldType,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.CodeFirst.FieldInfo"/> class.
            </summary>
            <param name="fieldId">The field id.</param>
            <param name="sectionId">The section id.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="customFieldType">The custom field type.</param>
            <param name="source">The source.</param>
            <param name="title">The title.</param>
            <param name="isShared">if set to <c>true</c> [is shared].</param>
            <param name="isUnversioned">if set to <c>true</c> [is unversioned].</param>
            <param name="fieldSortOrder">The field sort order.</param>
            <param name="validationRegularExpression">The validation regular expression.</param>
            <param name="validationErrorText">The validation error text.</param>
            <param name="isRequired">if set to <c>true</c> [is required].</param>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.FieldInfo.GetFieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.FieldId">
            <summary>
            Gets or sets the field id.
            </summary>
            <value>The field id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.SectionId">
            <summary>
            Gets or sets the section id.
            </summary>
            <value>The section id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.FieldType">
            <summary>
            Gets or sets the custom field type.
            </summary>
            <value>The field type.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.CustomFieldType">
            <summary>
            Gets or sets the field type.
            </summary>
            <value>The custom field type.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.IsShared">
            <summary>
            Gets or sets a value indicating whether this instance is shared.
            </summary>
            <value><c>true</c> if this instance is shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.IsUnversioned">
            <summary>
            Gets or sets a value indicating whether this instance is unversioned.
            </summary>
            <value><c>true</c> if this instance is unversioned; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.FieldFieldValues">
            <summary>
            Gets or sets the field field values.
            </summary>
            <value>The field field values.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.FieldSortOrder">
            <summary>
            Gets or sets the field sort order.
            </summary>
            <value>The field sort order.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.ValidationRegularExpression">
            <summary>
            Gets or sets the validation regular expression.
            </summary>
            <value>The validation regular expression.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.ValidationErrorText">
            <summary>
            Gets or sets the validation error text.
            </summary>
            <value>The validation error text.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.FieldInfo.IsRequired">
            <summary>
            Gets or sets a value indicating whether this instance is required.
            </summary>
            <value><c>true</c> if this instance is required; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.CodeFirst.GlassDataProvider">
            <summary>
            Class GlassDataProvider
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.TemplateFolderId">
            <summary>
            Taken from sitecore database
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GlassFolderId">
            <summary>
            The glass folder id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.SectionTemplateId">
            <summary>
            /sitecore/templates/System/Templates/Template section
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.FieldTemplateId">
            <summary>
            The field template id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.TemplateTemplateId">
            <summary>
            The template template id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.FolderTemplateId">
            <summary>
            The folder template id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.BaseTemplateField">
            <summary>
            The ID of the base templates field
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.CodeFirst.GlassDataProvider"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.CodeFirst.GlassDataProvider"/> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetItemDefinition(Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the definition of an item.
            </summary>
            <param name="itemId">The item ID.</param>
            <param name="context">The context.</param>
            <returns>Sitecore.Data.ItemDefinition.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetLanguages(Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets a list of all the language that have been defined
            in the database.
            </summary>
            <param name="context">The context.</param>
            <returns>LanguageCollection.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetItemFields(Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the fields of a specific item version.
            </summary>
            <param name="itemDefinition">The item.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <returns>Sitecore.Data.FieldList.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetStandardFields(Sitecore.Data.FieldList,System.Int32)">
            <summary>
            Gets the standard fields.
            </summary>
            <param name="fields">The fields.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetFieldFields(Glass.Mapper.Sc.CodeFirst.FieldInfo,Sitecore.Data.FieldList)">
            <summary>
            Gets the field fields.
            </summary>
            <param name="info">The info.</param>
            <param name="fields">The fields.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetChildIDs(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the child ids of an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore.Collections.IDList.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetChildIDsTemplate(Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,Sitecore.Data.DataProviders.DataProvider)">
            <summary>
            Gets the child I ds template.
            </summary>
            <param name="template">The template.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="sqlProvider">The SQL provider.</param>
            <returns>
            IDList.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetChildIDsSection(Glass.Mapper.Sc.CodeFirst.SectionInfo,Sitecore.Data.DataProviders.CallContext,Sitecore.Data.DataProviders.DataProvider)">
            <summary>
            Gets the child I ds section.
            </summary>
            <param name="section">The section.</param>
            <param name="context">The context.</param>
            <param name="sqlProvider">The SQL provider.</param>
            <returns>
            IDList.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetParentID(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the parent ID of an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore.Data.ID.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.CreateItem(Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates a item.
            </summary>
            <param name="itemId">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateId">The template ID.</param>
            <param name="parent">The parent.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.SaveItem(Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Saves an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.DeleteItem(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.Initialise(Sitecore.Data.Database)">
            <summary>
            Setups the specified context.
            </summary>
            <param name="db">The db.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.CreateTemplateItem(Sitecore.Data.Database,Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration,System.Type,Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the template item.
            </summary>
            <param name="db">The db.</param>
            <param name="config">The config.</param>
            <param name="type">The type.</param>
            <param name="sqlDataProvider">The SQL data provider.</param>
            <param name="containingFolder">The containing folder.</param>
            <param name="context">The context.</param>
            <returns></returns>
            <exception cref="T:Sitecore.Exceptions.RequiredObjectIsNullException">TemplateItem is null for ID {0}.Formatted(templateDefinition.ID)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetTemplateFolder(System.String,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the template folder that the class template should be created in using the classes
            namespace. 
            </summary>
            <param name="nameSpace"></param>
            <param name="defaultFolder"></param>
            <param name="sqlDataProvider"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.ClearCaches(Sitecore.Data.Database)">
            <summary>
            Clears the all caches on the database
            </summary>
            <param name="db"></param>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetSqlProvider(Sitecore.Data.Database)">
            <summary>
            Gets the base SQL provider that will store physical items
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.GetGlassTemplateFolder(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item /sitecore/templates/glasstemplates
            </summary>
            <param name="provider"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.RemoveDeletedClasses(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Check a folder and all sub folders in Sitecore for templates
            </summary>
            <param name="folder">The folder.</param>
            <param name="sqlDataProvider">The SQL data provider.</param>
            <param name="context">The context.</param>
            <returns>
            True of the folder is deleted itself.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.BaseTemplateChecks(Sitecore.Data.ItemDefinition,Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration,Sitecore.Data.Database)">
            <summary>
            Bases the template checks.
            </summary>
            <param name="template">The template.</param>
            <param name="config">The config.</param>
            <param name="db">The database.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <value>The name of the database.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.ContextName">
            <summary>
            The name of the GlassContext to load
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.SectionTable">
            <summary>
            Gets or sets the section table.
            </summary>
            <value>The section table.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.FieldTable">
            <summary>
            Gets or sets the field table.
            </summary>
            <value>The field table.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.CurrentContext">
            <summary>
            Gets the current context.
            </summary>
            <value>
            The current context.
            </value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.GlassDataProvider.TypeConfigurations">
            <summary>
            Gets the type configurations.
            </summary>
            <value>
            The type configurations.
            </value>
        </member>
        <member name="T:Glass.Mapper.Sc.CodeFirst.SectionInfo">
            <summary>
            Class SectionInfo
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.CodeFirst.SectionInfo.#ctor(System.String,Sitecore.Data.ID,Sitecore.Data.ID,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.CodeFirst.SectionInfo"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="sectionId">The section id.</param>
            <param name="templateId">The template id.</param>
            <param name="sectionSortOrder">The section sort order.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.SectionInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.SectionInfo.SectionId">
            <summary>
            Gets or sets the section id.
            </summary>
            <value>The section id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.SectionInfo.TemplateId">
            <summary>
            Gets or sets the template id.
            </summary>
            <value>The template id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.SectionInfo.SectionSortOrder">
            <summary>
            Gets or sets the section sort order.
            </summary>
            <value>The section sort order.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.CodeFirst.SectionInfo.Existing">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Glass.Mapper.Sc.CodeFirst.SectionInfo"/> is existing.
            </summary>
            <value><c>true</c> if existing; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreAttributeConfigurationLoader">
            <summary>
            Class SitecoreAttributeConfigurationLoader
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreAttributeConfigurationLoader.#ctor(System.String[])">
            <summary> 
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreAttributeConfigurationLoader"/> class.
            </summary>
            <param name="assemblies">The assemblies.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreChildrenAttribute">
            <summary>
            Indicates that the property should contain the children of the current item for the sitecore implementation
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreChildrenAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldFieldValueAttribute">
            <summary>
            Used to populate default values of a field's field
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldFieldValueAttribute.#ctor(System.String,System.String)">
            <summary>
            Indicates that the property should pull data from a Sitecore field.
            </summary>
            <param name="fieldId">The Id (Guid) of the field to load</param>
            <param name="fieldValue">The default field value</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldFieldValueAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="fieldConfiguration">The field configuration.</param>
            <returns>SitecoreFieldFieldValueConfiguration.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldFieldValueAttribute.FieldId">
            <summary>
            The Id (Guid) of the field to load
            </summary>
            <value>The field id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldFieldValueAttribute.FieldValue">
            <summary>
            The title for the field if using Code First
            </summary>
            <value>The field value.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIgnoreAttribute">
            <summary>
            SitecoreIgnoreAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIgnoreAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>
            AbstractPropertyConfiguration.
            </returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreItemAttribute">
            <summary>
            Maps the Sitecore Item being mapped to a property.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreItemAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreItemAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreItemConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreQueryAttribute">
            <summary>
            Class SitecoreQueryAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreQueryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Configuration.Attributes.QueryAttribute"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreQueryAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreQueryAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreQueryConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreQueryAttribute.UseQueryContext">
            <summary>
            Use the Sitecore.Data.Query.QueryContext when querying for data
            </summary>
            <value><c>true</c> if [use query context]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute">
            <summary>
            Class SitecoreTypeAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute"/> class.
            </summary>
            <param name="codeFirst">if set to <c>true</c> [code first].</param>
            <param name="templateId">The template id.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute.Configure(System.Type)">
            <summary>
            Configures the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="config">The config.</param>
            <exception cref="T:Glass.Mapper.Configuration.ConfigurationException">Type configuration is not of type {0}.Formatted(typeof (SitecoreTypeConfiguration).FullName)</exception>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute.TemplateId">
            <summary>
            Indicates the template to use when trying to create an item
            </summary>
            <value>The template id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute.BranchId">
            <summary>
            Indicates the branch to use when trying to create and item. If a template id is also specified the template Id will be use instead.
            </summary>
            <value>The branch id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreTypeAttribute.TemplateName">
            <summary>
            Overrides the default template name when using code first
            </summary>
            <value>The name of the template.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute">
            <summary>
            Class SitecoreFieldAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.#ctor(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute"/> class.
            </summary>
            <param name="fieldId">The field id.</param>
            <param name="fieldType">Type of the field.</param>
            <param name="sectionName">Name of the section.</param>
            <param name="codeFirst">if set to <c>true</c> [code first].</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.UrlOptions">
            <summary>
            Use with the Glass.Mapper.Sc.Fields.Link type
            </summary>
            <value>The URL options.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.FieldName">
            <summary>
            The name of the field  to use if it is different to the property name
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.FieldId">
            <summary>
            The ID of the field when used in a code first scenario
            </summary>
            <value>The field id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.Setting">
            <summary>
            Options to override the behaviour of certain fields.
            </summary>
            <value>The setting.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.CodeFirst">
            <summary>
            Indicates the field should be used as part of a code first template
            </summary>
            <value><c>true</c> if [code first]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.FieldType">
            <summary>
            The type of field to create when using Code First
            </summary>
            <value>The type of the field.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.SectionName">
            <summary>
            The name of the section this field will appear in when using code first.
            </summary>
            <value>The name of the section.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.FieldTitle">
            <summary>
            The title for the field if using Code First
            </summary>
            <value>The field title.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.FieldSource">
            <summary>
            The source for the field if using Code First
            </summary>
            <value>The field source.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.IsShared">
            <summary>
            Sets the field as shared if using Code First
            </summary>
            <value><c>true</c> if this instance is shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.IsUnversioned">
            <summary>
            Sets the field as unversioned if using Code First
            </summary>
            <value><c>true</c> if this instance is unversioned; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.FieldSortOrder">
            <summary>
            Overrides the field sort order if using Code First
            </summary>
            <value>The field sort order.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.SectionSortOrder">
            <summary>
            Overrides the section sort order if using Code First
            </summary>
            <value>The section sort order.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.ValidationRegularExpression">
            <summary>
            Overrides the field validation regular expression if using Code First
            </summary>
            <value>The validation regular expression.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.ValidationErrorText">
            <summary>
            Overrides the field validation error text if using Code First
            </summary>
            <value>The validation error text.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.IsRequired">
            <summary>
            Sets the field as required if using Code First
            </summary>
            <value><c>true</c> if this instance is required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreFieldAttribute.CustomFieldType">
            <summary>
            Allows for custom types of field to create when using Code First
            </summary>
            <value>The type of the field.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIdAttribute">
            <summary>
            Class SitecoreIdAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIdAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIdAttribute"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIdAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreIdAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreIdConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute">
            <summary>
            Class SitecoreInfoAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute.#ctor(Glass.Mapper.Sc.Configuration.SitecoreInfoType)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute"/> class.
            </summary>
            <param name="infoType">Type of the info.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreInfoConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute.Type">
            <summary>
            The type of information that should populate the property
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreInfoAttribute.UrlOptions">
            <summary>
            UrlOptions, use in conjunction with SitecoreInfoType.Url
            </summary>
            <value>The URL options.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreLinkedAttribute">
            <summary>
            Class SitecoreLinkedAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreLinkedAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreLinkedAttribute"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreLinkedAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreLinkedAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreLinkedConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Attributes.SitecoreLinkedAttribute.Option">
            <summary>
            Indicate weather All, References or Referred should be loaded
            </summary>
            <value>The option.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreNodeAttribute">
            <summary>
            Class SitecoreNodeAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreNodeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreNodeAttribute"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreNodeAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreNodeAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreNodeConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Attributes.SitecoreParentAttribute">
            <summary>
            Class SitecoreParentAttribute
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreParentAttribute.Configure(System.Reflection.PropertyInfo)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>AbstractPropertyConfiguration.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Attributes.SitecoreParentAttribute.Configure(System.Reflection.PropertyInfo,Glass.Mapper.Sc.Configuration.SitecoreParentConfiguration)">
            <summary>
            Configures the specified property info.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="config">The config.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.AbstractPropertyBuilder`2">
            <summary>
            Class AbstractPropertyBuilder
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK">The type of the TK.</typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.AbstractPropertyBuilder`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.AbstractPropertyBuilder`2"/> class.
            </summary>
            <param name="ex">The ex.</param>
            <exception cref="T:Glass.Mapper.MapperException">To many parameters in linq expression {0}.Formatted(ex.Body)</exception>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Fluent.AbstractPropertyBuilder`2.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>The configuration.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Fluent.AbstractPropertyBuilder`2.Expression">
            <summary>
            Gets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreItem`1">
            <summary>
            Used to map item information to a class property
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreItem`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreInfo`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreIgnore`1">
            <summary>
            SitecoreIgnore
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreIgnore`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreFieldFieldValueConfiguration">
            <summary>
            Used to populate default values of a field's field
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldFieldValueConfiguration.FieldId">
            <summary>
            The Id (Guid) of the field to load
            </summary>
            <value>The field id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldFieldValueConfiguration.FieldValue">
            <summary>
            The value for the field if using Code First
            </summary>
            <value>The field value.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreFluentConfigurationLoader">
            <summary>
            Class SitecoreFluentConfigurationLoader
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreFluentConfigurationLoader.Add``1(Glass.Mapper.Sc.Configuration.Fluent.SitecoreType{``0})">
            <summary>
            Adds the specified config.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="config">The config.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreFluentConfigurationLoader.Add``1">
            <summary>
            Adds this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>SitecoreType{``0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreFluentConfigurationLoader.Load">
            <summary>
            Loads this instance.
            </summary>
            <returns>IEnumerable{AbstractTypeConfiguration}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreType">
            <summary>
            Interface ISitecoreType
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreType.Config">
            <summary>
            Gets the config.
            </summary>
            <value>The config.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreChildren`1">
            <summary>
            Indicates that the property should contain the children of the current item
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreChildren`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreChildren`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreChildren`1.IsNotLazy">
            <summary>
            Indicates if children should not be loaded lazily.  If false all children will be loaded when the containing object is created.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreChildren`1.InferType">
            <summary>
            Indicates the type should be inferred from the item template
            </summary>
            <returns>SitecoreChildren{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1">
            <summary>
            Indicates that the .Net class can be loaded by Glass.Sitecore.Mapper
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreType`1">
            <summary>
            Interface ISitecoreType
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassFields`1">
            <summary>
            Interface ISitecoreClassFields
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassFields`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Fields the specified ex.
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassInfos`1">
            <summary>
            Interface ISitecoreClassInfos
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassInfos`1.Info(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Infoes the specified ex.
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreInfo{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassQueries`1">
            <summary>
            Interface ISitecoreClassQueries
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassQueries`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Queries the specified ex.
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreQuery{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassNodes`1">
            <summary>
            Interface ISitecoreClassNodes
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassNodes`1.Node(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Nodes the specified ex.
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreNode{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreLinkedItems`1">
            <summary>
            Interface ISitecoreLinkedItems
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreLinkedItems`1.Linked(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Linkeds the specified ex.
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreLinked{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassId`1">
            <summary>
            Interface ISitecoreClassId
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassId`1.Id(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Ids the specified ex.
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreId{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.TemplateId(System.String)">
            <summary>
            Indicates the template to use when trying to create an item
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.TemplateId(System.Guid)">
            <summary>
            Templates the id.
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.TemplateId(Sitecore.Data.ID)">
            <summary>
            Indicates the template to use when trying to create an item
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.BranchId(System.String)">
            <summary>
            Indicates the branch to use when trying to create and item. If a template id is also specified the template Id will be use instead.
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.BranchId(System.Guid)">
            <summary>
            Indicates the branch to use when trying to create and item. If a template id is also specified the template Id will be use instead.
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.BranchId(Sitecore.Data.ID)">
            <summary>
            Indicates the branch to use when trying to create and item. If a template id is also specified the template Id will be use instead.
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.CodeFirst">
            <summary>
            Codes the first.
            </summary>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.TemplateName(System.String)">
            <summary>
            Templates the name.
            </summary>
            <param name="name">The name.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Children(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map item's  children  to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreChildren{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map an item field to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Ignore a specific property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreIgnore{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Id(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map the item ID to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreId{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Info(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map item information  to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreInfo{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Item(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map the item being mapped to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreInfo{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Parent(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map an item's parent  to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreParent{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Query(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map a Sitecore Query to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreQuery{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Node(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map a Sitecore item to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreNode{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Linked(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Map an item's linked items to a class property
            </summary>
            <param name="ex">The ex.</param>
            <returns>SitecoreLinked{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Fields(System.Action{Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassFields{`0}})">
            <summary>
            Map item fields to a class properties
            </summary>
            <param name="fields">The fields.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Infos(System.Action{Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassInfos{`0}})">
            <summary>
            Map multiple item information to a class properties
            </summary>
            <param name="infos">The infos.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Queries(System.Action{Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassQueries{`0}})">
            <summary>
            Map Sitecore queries to class properties
            </summary>
            <param name="queries">The queries.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Nodes(System.Action{Glass.Mapper.Sc.Configuration.Fluent.ISitecoreClassNodes{`0}})">
            <summary>
            Map Sitecore items to a class properties
            </summary>
            <param name="items">The items.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Links(System.Action{Glass.Mapper.Sc.Configuration.Fluent.ISitecoreLinkedItems{`0}})">
            <summary>
            Map an item's linked items to a class properties
            </summary>
            <param name="links">The links.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Configure(System.Action{Glass.Mapper.Sc.Configuration.Fluent.ISitecoreType{`0}})">
            <summary>
            Map an item's linked items to a class properties
            </summary>
            <param name="config">The config.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Import``1(Glass.Mapper.Sc.Configuration.Fluent.SitecoreType{``0})">
            <summary>
            Imports the properties form another type
            </summary>
            <typeparam name="K"></typeparam>
            <param name="typeConfig">The type config.</param>
            <returns>SitecoreType{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.AutoMap">
            <summary>
            Autoes the map.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.Fluent.SitecoreType`1.Config">
            <summary>
            Gets the config.
            </summary>
            <value>The config.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1">
            <summary>
            Used to populate the property with data from a Sitecore field
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.IsCodeFirst">
            <summary>
            Indicate that the field can be used with Code First
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldId(System.String)">
            <summary>
            The ID of the field to load or create in code first
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldId(System.Guid)">
            <summary>
            The ID of the field to load or create in code first
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldId(Sitecore.Data.ID)">
            <summary>
            The ID of the field to load or create in code first
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldName(System.String)">
            <summary>
            The name of the field  to use if it is different to the property name
            </summary>
            <param name="name">The name.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldSource(System.String)">
            <summary>
            The source for a code first field
            </summary>
            <param name="fieldSource">The field source.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldTitle(System.String)">
            <summary>
            The title for a code first field
            </summary>
            <param name="fieldTitle">The field title.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldType(Glass.Mapper.Sc.Configuration.SitecoreFieldType)">
            <summary>
            The Sitecore field type for a code first field
            </summary>
            <param name="fieldType">Type of the field.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.IsShared">
            <summary>
            The field should be shared between languages
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.IsUnversioned">
            <summary>
            The field should be shared between versions
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.CustomFieldType(System.String)">
            <summary>
            The Sitecore custom field type for a code first field
            </summary>
            <param name="fieldType">Type of the field.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.Setting(Glass.Mapper.Sc.Configuration.SitecoreFieldSettings)">
            <summary>
            Options to override the behaviour of certain fields.
            </summary>
            <param name="setting">The setting.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.SectionName(System.String)">
            <summary>
            The name of the section the field should appear in
            </summary>
            <param name="sectionName">Name of the section.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.ReadOnly">
            <summary>
            Indicate that the field can not be written to Sitecore
            </summary>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.FieldSortOrder(System.Int32)">
            <summary>
            Fields the sort order.
            </summary>
            <param name="order">The order.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.SectionSortOrder(System.Int32)">
            <summary>
            Sections the sort order.
            </summary>
            <param name="order">The order.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.ValidationErrorText(System.String)">
            <summary>
            Validations the error text.
            </summary>
            <param name="text">The text.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.ValidationRegularExpression(System.String)">
            <summary>
            Validations the regular expression.
            </summary>
            <param name="regex">The regex.</param>
            <returns>SitecoreField{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreField`1.IsRequired">
            <summary>
            Determines whether this instance is required.
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreId`1">
            <summary>
            Indicates a field that contains the Sitecore item ID, this field must be a Guid
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreId`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreId`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreInfo`1">
            <summary>
            Used to map item information to a class property
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreInfo`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreInfo`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreInfo`1.InfoType(Glass.Mapper.Sc.Configuration.SitecoreInfoType)">
            <summary>
            The type of information that should populate the property
            </summary>
            <param name="type">The type.</param>
            <returns>SitecoreInfo{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreInfo`1.UrlOptions(Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions)">
            <summary>
            UrlOptions, use in conjunction with SitecoreInfoType.Url
            </summary>
            <param name="option">The option.</param>
            <returns>SitecoreInfo{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreNode`1">
            <summary>
            Used to pull in a Sitecore item
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreNode`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreNode`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreNode`1.Path(System.String)">
            <summary>
            The path to the item. If both a path and ID are specified the ID will be used.
            </summary>
            <param name="path">The path.</param>
            <returns>SitecoreNode{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreNode`1.Id(System.Guid)">
            <summary>
            The Id of the item.
            </summary>
            <param name="id">The id.</param>
            <returns>SitecoreNode{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreNode`1.IsNotLazy">
            <summary>
            Indicates that the item should not be loaded lazily. If set the item will be loaded when the containing object is created.
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreLinked`1">
            <summary>
            Indicates that the property should pull from the item links list.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreLinked`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreLinked`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreLinked`1.IsNotLazy">
            <summary>
            Indicates if linked items should not be  loaded lazily. Default value is true. If set linked items will be loaded when the contain object is created.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreLinked`1.InferType">
            <summary>
            Indicates the type should be inferred from the item template
            </summary>
            <returns>SitecoreLinked{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreLinked`1.Option(Glass.Mapper.Sc.Configuration.SitecoreLinkedOptions)">
            <summary>
            Indicate weather All, References or Referred should be loaded
            </summary>
            <param name="option">The option.</param>
            <returns>SitecoreLinked{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreParent`1">
            <summary>
            Indicates that the property should be populated with the parent item.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreParent`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreParent`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreParent`1.IsNotLazy">
            <summary>
            Indicates if the parent shouldn't be loaded lazily.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreParent`1.InferType">
            <summary>
            Indicates the type should be inferred from the item template
            </summary>
            <returns>SitecoreParent{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1">
            <summary>
            Indicates that a query should be execute to load data into the property.
            The query can be either absolute or relative to the current item.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1.#ctor(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1.IsNotLazy">
            <summary>
            Indicates that the results should be loaded lazily
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1.InferType">
            <summary>
            Indicates the type should be inferred from the item template
            </summary>
            <returns>SitecoreQuery{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1.UseQueryContext">
            <summary>
            Use the Sitecore.Data.Query.QueryContext when querying for data
            </summary>
            <returns>SitecoreQuery{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1.IsRelative">
            <summary>
            Indicates that the field is relative to the current item.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.Fluent.SitecoreQuery`1.Query(System.String)">
            <summary>
            The query to execute
            </summary>
            <param name="query">The query.</param>
            <returns>SitecoreQuery{`0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreChildrenConfiguration">
            <summary>
            Class SitecoreChildrenConfiguration
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration">
            <summary>
            Class SitecoreFieldConfiguration
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.Copy">
            <summary>
            Makes a copy of the SitecoreFieldConfiguration
            </summary>
            <returns>SitecoreFieldConfiguration.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldName">
            <summary>
            The name of the field  to use if it is different to the property name
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldId">
            <summary>
            The ID of the field when used in a code first scenario
            </summary>
            <value>The field id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.Setting">
            <summary>
            Options to override the behaviour of certain fields.
            </summary>
            <value>The setting.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.CodeFirst">
            <summary>
            Indicates the field should be used as part of a code first template
            </summary>
            <value><c>true</c> if [code first]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldType">
            <summary>
            The type of field to create when using Code First
            </summary>
            <value>The type of the field.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.SectionName">
            <summary>
            The name of the section this field will appear in when using code first.
            </summary>
            <value>The name of the section.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldTitle">
            <summary>
            The title for the field if using Code First
            </summary>
            <value>The field title.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldSource">
            <summary>
            The source for the field if using Code First
            </summary>
            <value>The field source.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.IsShared">
            <summary>
            Sets the field as shared if using Code First
            </summary>
            <value><c>true</c> if this instance is shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.IsUnversioned">
            <summary>
            Sets the field as unversioned if using Code First
            </summary>
            <value><c>true</c> if this instance is unversioned; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldSortOrder">
            <summary>
            Overrides the field sort order if using Code First
            </summary>
            <value>The field sort order.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.SectionSortOrder">
            <summary>
            Overrides the section sort order if using Code First
            </summary>
            <value>The section sort order.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.ValidationRegularExpression">
            <summary>
            Overrides the field validation regular expression if using Code First
            </summary>
            <value>The validation regular expression.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.ValidationErrorText">
            <summary>
            Overrides the field validation error text if using Code First
            </summary>
            <value>The validation error text.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.IsRequired">
            <summary>
            Sets the field as required if using Code First
            </summary>
            <value><c>true</c> if this instance is required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.FieldValueConfigs">
            <summary>
            Gets or sets the field value configs.
            </summary>
            <value>The field value configs.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.UrlOptions">
            <summary>
            Use with Glass.Mapper.Sc.Fields.Link type
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration.CustomFieldType">
            <summary>
            Allows for custom types of field to create when using Code First
            </summary>
            <value>The type of the field.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreFieldSettings">
            <summary>
            Enum SitecoreFieldSettings
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldSettings.Default">
            <summary>
            The field carries out its default behaviour
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldSettings.RichTextRaw">
            <summary>
            If used on a Rich Text field it stops the contents going through the render process
            and returns the raw HTML of the field
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldSettings.DontLoadLazily">
            <summary>
            If the property type is another classes loaded by the  Mapper, indicates that the class should not be lazy loaded.
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldSettings.InferType">
            <summary>
            Indicates the type should be inferred from the item template
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldSettings.PageEditorOnly">
            <summary>
            The field will only be used to enable the page editor but values will not be read or written to it.
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreFieldType">
            <summary>
            Enum SitecoreFieldType
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.NotSet">
            <summary>
            The not set
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.SingleLineText">
            <summary>
            The single line text
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.RichText">
            <summary>
            The rich text
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Checkbox">
            <summary>
            The checkbox
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Date">
            <summary>
            The date
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.GeneralLink">
            <summary>
            The general link
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.DropTree">
            <summary>
            The drop tree
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Droplink">
            <summary>
            The droplink
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.TreelistEx">
            <summary>
            The treelist ex
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Treelist">
            <summary>
            The treelist
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Multilist">
            <summary>
            The multilist
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.GroupedDroplist">
            <summary>
            The grouped droplist
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.GroupedDroplink">
            <summary>
            The grouped droplink
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Droplist">
            <summary>
            The droplist
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Checklist">
            <summary>
            The checklist
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Password">
            <summary>
            The password
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Number">
            <summary>
            The number
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.MultiLineText">
            <summary>
            The multi line text
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Integer">
            <summary>
            The integer
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.File">
            <summary>
            The file
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.DateTime">
            <summary>
            The date time
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreFieldType.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreIdConfiguration">
            <summary>
            Class SitecoreIdConfiguration
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreIgnoreConfiguration">
            <summary>
            SitecoreIgnoreConfiguration
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreInfoConfiguration">
            <summary>
            Class SitecoreInfoConfiguration
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreInfoConfiguration.Type">
            <summary>
            The type of information that should populate the property
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreInfoConfiguration.UrlOptions">
            <summary>
            UrlOptions, use in conjunction with SitecoreInfoType.Url
            </summary>
            <value>The URL options.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreInfoType">
            <summary>
            Enum SitecoreInfoType
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.NotSet">
            <summary>
            No value has been set
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.ContentPath">
            <summary>
            The item's content path. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.DisplayName">
            <summary>
            The item's display name. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.FullPath">
            <summary>
            The item's full path. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.Key">
            <summary>
            The item's key . The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.MediaUrl">
            <summary>
            The item's media URL. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.Path">
            <summary>
            The item's path. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.TemplateId">
            <summary>
            The item's template Id. The property type must be System.Guid
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.TemplateName">
            <summary>
            The item's template name. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.Url">
            <summary>
            The item's URL. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.Version">
            <summary>
            The item's version. The property type must be System.Int32
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.Name">
            <summary>
            The item's Name. The property type must be System.String
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.Language">
            <summary>
            The items language. The property type must be Sitecore.Globalization.Language
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoType.BaseTemplateIds">
            <summary>
            Gets the Base Template IDs - does not return the template is. The property type must be IEnumerable&lt;Guid&gt;
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions">
            <summary>
            Enum SitecoreInfoUrlOptions
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.AddAspxExtension">
            <summary>
            The add aspx extension
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.AlwaysIncludeServerUrl">
            <summary>
            The always include server URL
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.EncodeNames">
            <summary>
            The encode names
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.LanguageEmbeddingAlways">
            <summary>
            Do not use with LanguageEmbeddingAsNeeded, LanguageEmbeddingNever
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.LanguageEmbeddingAsNeeded">
            <summary>
            Do not use with LanguageEmbeddingAlways, LanguageEmbeddingNever
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.LanguageEmbeddingNever">
            <summary>
            Do not use with LanguageEmbeddingAlways, LanguageEmbeddingAsNeeded
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.LanguageLocationFilePath">
            <summary>
            Do not use with LanguageLocationQueryString
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.LanguageLocationQueryString">
            <summary>
            Do not use with LanguageLocationFilePath
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.ShortenUrls">
            <summary>
            The shorten urls
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.SiteResolving">
            <summary>
            The site resolving
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions.UseUseDisplayName">
            <summary>
            The use use display name
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreLinkedConfiguration">
            <summary>
            Class SitecoreLinkedConfiguration
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreLinkedConfiguration.Option">
            <summary>
            Indicate weather All, References or Referred should be loaded
            </summary>
            <value>The option.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreLinkedOptions">
            <summary>
            Enum SitecoreLinkedOptions
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreLinkedOptions.All">
            <summary>
            All
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreLinkedOptions.References">
            <summary>
            The references
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Configuration.SitecoreLinkedOptions.Referrers">
            <summary>
            The referrers
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreNodeConfiguration">
            <summary>
            Class SitecoreNodeConfiguration
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreParentConfiguration">
            <summary>
            Class SitecoreParentConfiguration
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreQueryConfiguration">
            <summary>
            Class SitecoreQueryConfiguration
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreQueryConfiguration.UseQueryContext">
            <summary>
            Gets or sets a value indicating whether [use query context].
            </summary>
            <value><c>true</c> if [use query context]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration">
            <summary>
            Class SitecoreTypeConfiguration
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.AddProperty(Glass.Mapper.Configuration.AbstractPropertyConfiguration)">
            <summary>
            Adds the property.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.ResolveItem(System.Object,Sitecore.Data.Database)">
            <summary>
            Resolves the item.
            </summary>
            <param name="target">The target.</param>
            <param name="database">The database.</param>
            <returns>
            Item.
            </returns>
            <exception cref="T:System.NotSupportedException">You can not save a class that does not contain a property that represents the item ID. Ensure that at least one property has been marked to contain the Sitecore ID.
            or
            Cannot get ID for item</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.GetLanguage(System.Object)">
            <summary>
            Gets the language.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.AutoMapProperty(System.Reflection.PropertyInfo)">
            <summary>
            Called to map each property automatically
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.TemplateId">
            <summary>
            Gets or sets the template id.
            </summary>
            <value>The template id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.BranchId">
            <summary>
            Gets or sets the branch id.
            </summary>
            <value>The branch id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.IdConfig">
            <summary>
            Gets or sets the id config.
            </summary>
            <value>The id config.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.LanguageConfig">
            <summary>
            Gets or sets the language config.
            </summary>
            <value>The language config.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.VersionConfig">
            <summary>
            Gets or sets the version config.
            </summary>
            <value>The version config.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.ItemConfig">
            <summary>
            Gets or sets the item config
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.CodeFirst">
            <summary>
            Indicates that the class is used in a code first scenario.
            </summary>
            <value><c>true</c> if [code first]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Configuration.SitecoreTypeConfiguration.TemplateName">
            <summary>
            Overrides the default template name when using code first
            </summary>
            <value>The name of the template.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper">
            <summary>
            Class AbstractSitecoreFieldMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper"/> class.
            </summary>
            <param name="typesHandled">The types handled.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.TypesHandled">
            <summary>
            Gets the types handled.
            </summary>
            <value>The types handled.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.AbstractSitecoreFieldMapper.DefaultValue">
            <summary>
            The default value to return if the field isn't found
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreIgnoreMapper">
            <summary>
            This mapped does nothing, used to ignore a property
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIgnoreMapper.MapCmsToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Takes CMS data and writes it to the property
            </summary>
            <param name="mappingContext">The mapping context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIgnoreMapper.MapPropertyToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Takes a Property value and writes it to a CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIgnoreMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIgnoreMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>
            System.Object.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIgnoreMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns>
              <c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreNodeMapper">
            <summary>
            Class SitecoreNodeMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreNodeMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreNodeMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreNodeMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreNodeMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreNodeMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldLongMapper">
            <summary>
            Class SitecoreFieldLongMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLongMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldLongMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLongMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">Could not convert value to double</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLongMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">The value is not of type System.Double</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldIntegerMapper">
            <summary>
            Class SitecoreFieldIntegerMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIntegerMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldIntegerMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIntegerMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">Could not convert value to double</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIntegerMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">The value is not of type System.Double</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper">
            <summary>
            Class SitecoreFieldImageMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <exception cref="T:Glass.Mapper.MapperException">No item with ID {0}. Can not update Media Item field.Formatted(newId)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldImageMapper.GetMediaUrlWithoutContentCheck(Sitecore.Data.Items.MediaItem,Sitecore.Resources.Media.MediaUrlOptions)">
            <summary>
            Gets a media URL.
            
            </summary>
            <param name="item">The media item.</param><param name="options">The query string.</param>
            <returns>
            The media URL.
            </returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldGuidMapper">
            <summary>
            Class SitecoreFieldGuidMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldGuidMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldGuidMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldGuidMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldGuidMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:Glass.Mapper.MapperException">The value is not of type System.Guid</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldFloatMapper">
            <summary>
            Class SitecoreFieldFloatMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFloatMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldFloatMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFloatMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">Could not convert value to double</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFloatMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">The value is not of type System.Double</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreChildrenMapper">
            <summary>
            Class SitecoreChildrenMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreChildrenMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreChildrenMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreChildrenMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreChildrenMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreChildrenMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldBooleanMapper">
            <summary>
            Class SitecoreFieldBooleanMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldBooleanMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldBooleanMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldBooleanMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldBooleanMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldDateTimeMapper">
            <summary>
            Class SitecoreFieldDateTimeMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDateTimeMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldDateTimeMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDateTimeMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDateTimeMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">The value is not of type System.DateTime</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldDecimalMapper">
            <summary>
            Class SitecoreFieldDecimalMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDecimalMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldDecimalMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDecimalMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">Could not convert value to decimal</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDecimalMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">The value is not of type System.Decimal</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldDoubleMapper">
            <summary>
            Class SitecoreFieldDoubleMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDoubleMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldDoubleMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDoubleMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">Could not convert value to double</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldDoubleMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotSupportedException">The value is not of type System.Double</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldEnumMapper">
            <summary>
            Class SitecoreFieldEnumMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldEnumMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">
            Can not convert value {0} to enum type {1}.Formatted(fieldValue, enumType.FullName)
            or
            Can not convert value {0} to enum type {1}.Formatted(fieldValue, enumType.FullName)
            </exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldEnumMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldEnumMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Determines whether this instance can handle the specified configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper">
            <summary>
            Class SitecoreFieldFileMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <exception cref="T:Glass.Mapper.MapperException">No item with ID {0}. Can not update File Item field.Formatted(newId)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldFileMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldIEnumerableMapper">
            <summary>
            Class SitecoreFieldIEnumerableMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIEnumerableMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIEnumerableMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIEnumerableMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Determines whether this instance can handle the specified configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldIEnumerableMapper.Setup(Glass.Mapper.Pipelines.DataMapperResolver.DataMapperResolverArgs)">
            <summary>
            Sets up the data mapper for a particular property
            </summary>
            <param name="args">The args.</param>
            <exception cref="T:Glass.Mapper.MapperException">No mapper to handle type {0} on property {1} class {2}.Formatted(type.FullName, property.Name,
                                                                                                   property.ReflectedType.FullName)</exception>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreFieldIEnumerableMapper.Mapper">
            <summary>
            Gets the mapper.
            </summary>
            <value>The mapper.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper">
            <summary>
            Class SitecoreFieldLinkMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldLinkMapper.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <exception cref="T:Glass.Mapper.MapperException">
            No item with ID {0}. Can not update Link linkField.Formatted(newId)
            or
            No item with ID {0}. Can not update Link linkField.Formatted(newId)
            </exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNameValueCollectionMapper">
            <summary>
            Class SitecoreFieldNameValueCollectionMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNameValueCollectionMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNameValueCollectionMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNameValueCollectionMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNameValueCollectionMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2">
            <summary>
            Class SitecoreFieldNullableMapper
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TMapper">The type of the T mapper.</typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableMapper`2.Setup(Glass.Mapper.Pipelines.DataMapperResolver.DataMapperResolverArgs)">
            <summary>
            Sets up the data mapper for a particular property
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableDateTimeMapper">
            <summary>
            Class SitecoreFieldNullableDateTimeMapper
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableDecimalMapper">
            <summary>
            Class SitecoreFieldNullableDecimalMapper
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableDoubleMapper">
            <summary>
            Class SitecoreFieldNullableDoubleMapper
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableFloatMapper">
            <summary>
            Class SitecoreFieldNullableFloatMapper
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableGuidMapper">
            <summary>
            Class SitecoreFieldNullableGuidMapper
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldNullableIntMapper">
            <summary>
            Class SitecoreFieldNullableIntMapper
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldRulesMapper">
            <summary>
            Class SitecoreFieldRulesMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldRulesMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldRulesMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldRulesMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldRulesMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Determines whether this instance can handle the specified configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper">
            <summary>
            Class SitecoreFieldStreamMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStreamMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper">
            <summary>
            Class SitecoreFieldStringMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper.GetField(Sitecore.Data.Fields.Field,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper.SetField(Sitecore.Data.Fields.Field,System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.NotSupportedException">It is not possible to save data from a rich text field when the data isn't raw.
                                + Set the SitecoreFieldAttribute setting property to SitecoreFieldSettings.RichTextRaw for property {0} on type {1}.Formatted(config.PropertyInfo.Name, config.PropertyInfo.ReflectedType.FullName)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>
            System.String.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldStringMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>
            System.Object.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreIdMapper">
            <summary>
            Class SitecoreIdMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIdMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreIdMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIdMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIdMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.NotSupportedException">The type {0} on {0}.{1} is not supported by SitecoreIdMapper.Formatted
                                                                (scConfig.PropertyInfo.ReflectedType.FullName,
                                                                    scConfig.PropertyInfo.Name)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreIdMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper">
            <summary>
            Class SitecoreInfoMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotSupportedException">
            Can't set DisplayName. Value is not of type System.String
            or
            Can't set Name. Value is not of type System.String
            or
            You can not save SitecoreInfo {0}.Formatted(scConfig.Type)
            </exception>
            <exception cref="T:Glass.Mapper.MapperException">You can not set an empty or null Item name</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
            <exception cref="T:Glass.Mapper.MapperException">SitecoreInfoType {0} not supported.Formatted(scConfig.Type)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper.Setup(Glass.Mapper.Pipelines.DataMapperResolver.DataMapperResolverArgs)">
            <summary>
            Sets up the data mapper for a particular property
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreInfoMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreLinkedMapper">
            <summary>
            Class SitecoreLinkedMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreLinkedMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreLinkedMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreLinkedMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreLinkedMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreLinkedMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreParentMapper">
            <summary>
            Class SitecoreParentMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreParentMapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreParentMapper"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreParentMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreParentMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreParentMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper">
            <summary>
            Class SitecoreFieldTypeMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper.GetFieldValue(System.String,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Gets the field value.
            </summary>
            <param name="fieldValue">The field value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper.SetFieldValue(System.Object,Glass.Mapper.Sc.Configuration.SitecoreFieldConfiguration,Glass.Mapper.Sc.SitecoreDataMappingContext)">
            <summary>
            Sets the field value.
            </summary>
            <param name="value">The value.</param>
            <param name="config">The config.</param>
            <param name="context">The context.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.NullReferenceException">Could not find item to save value {0}.Formatted(Configuration)</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Determines whether this instance can handle the specified configuration.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper.Setup(Glass.Mapper.Pipelines.DataMapperResolver.DataMapperResolverArgs)">
            <summary>
            Sets up the data mapper for a particular property
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper.InferType">
            <summary>
            Gets or sets a value indicating whether [infer type].
            </summary>
            <value><c>true</c> if [infer type]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreFieldTypeMapper.IsLazy">
            <summary>
            Gets or sets a value indicating whether this instance is lazy.
            </summary>
            <value><c>true</c> if this instance is lazy; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper">
            <summary>
            Class SitecoreQueryMapper
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper.#ctor(System.Collections.Generic.IEnumerable{Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ISitecoreQueryParameter})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper"/> class.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper.MapToCms(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the .Net property value to the CMS value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>The value to write</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper.MapToProperty(Glass.Mapper.AbstractDataMappingContext)">
            <summary>
            Maps data from the CMS value to the .Net property value
            </summary>
            <param name="mappingContext">The mapping context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper.CanHandle(Glass.Mapper.Configuration.AbstractPropertyConfiguration,Glass.Mapper.Context)">
            <summary>
            Indicates that the data mapper will mapper to and from the property
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="context">The context.</param>
            <returns><c>true</c> if this instance can handle the specified configuration; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryMapper.ParseQuery(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Parses the query.
            </summary>
            <param name="query">The query.</param>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ISitecoreQueryParameter">
            <summary>
            Interface ISitecoreQueryParameter
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ISitecoreQueryParameter.GetValue(Sitecore.Data.Items.Item)">
            <summary>
            Gets the value.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ISitecoreQueryParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemDateNowParameter">
            <summary>
            Class ItemDateNowParameter
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemDateNowParameter.GetValue(Sitecore.Data.Items.Item)">
            <summary>
            Gets the value.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemDateNowParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemEscapedPathParameter">
            <summary>
            Class ItemEscapedPathParameter
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemEscapedPathParameter.GetValue(Sitecore.Data.Items.Item)">
            <summary>
            Gets the value.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemEscapedPathParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemIdNoBracketsParameter">
            <summary>
            Class ItemIdNoBracketsParameter
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemIdNoBracketsParameter.GetValue(Sitecore.Data.Items.Item)">
            <summary>
            Gets the value.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemIdNoBracketsParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemIdParameter">
            <summary>
            Class ItemIdParameter
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemIdParameter.GetValue(Sitecore.Data.Items.Item)">
            <summary>
            Gets the value.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemIdParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemPathParameter">
            <summary>
            Class ItemPathParameter
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemPathParameter.GetValue(Sitecore.Data.Items.Item)">
            <summary>
            Gets the value.
            </summary>
            <param name="item">The item.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.DataMappers.SitecoreQueryParameters.ItemPathParameter.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Dynamic.Dy">
            <summary>
            Class Dy
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.Dy.Fc(System.Func{System.Object,System.Boolean})">
            <summary>
            Fcs the specified expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>Func{dynamicSystem.Boolean}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.Dy.FcT``1(System.Func{System.Object,``0})">
            <summary>
            Fcs the T.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="expression">The expression.</param>
            <returns>Func{dynamic``0}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Dynamic.DynamicCollection`1">
            <summary>
            Class DynamicCollection
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Dynamic.DynamicCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Dynamic.DynamicCollection`1"/> class.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicCollection`1.Add(`0)">
            <summary>
            Adds the specified t.
            </summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicCollection`1.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>
            Provides the implementation for operations that invoke a member. Classes derived from the <see cref="T:System.Dynamic.DynamicObject" /> class can override this method to specify dynamic behavior for operations such as calling a method.
            </summary>
            <param name="binder">Provides information about the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the statement sampleObject.SampleMethod(100), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, binder.Name returns "SampleMethod". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="args">The arguments that are passed to the object member during the invoke operation. For example, for the statement sampleObject.SampleMethod(100), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject" /> class, <paramref name="args" /> is equal to 100.</param>
            <param name="result">The result of the member invocation.</param>
            <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Dynamic.DynamicField">
            <summary>
            Class DynamicField
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicField.#ctor(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Dynamic.DynamicField"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicField.Editable">
            <summary>
            Editables this instance.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicField.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicField.op_Implicit(Glass.Mapper.Sc.Dynamic.DynamicField)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Glass.Mapper.Sc.Dynamic.DynamicField"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="field">The field.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicField.GetFieldContent(System.Boolean)">
            <summary>
            Gets the content of the field.
            </summary>
            <param name="editable">if set to <c>true</c> [editable].</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Dynamic.DynamicItem">
            <summary>
            Class DynamicItem
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicItem.#ctor(Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Dynamic.DynamicItem"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicItem.GetField(System.String,Sitecore.Data.Items.Item)">
            <summary>
            Gets the field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="item">The item.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicItem.CreateNew(Sitecore.Data.Items.Item)">
            <summary>
            Creates the new.
            </summary>
            <param name="item">The item.</param>
            <returns>DynamicItem.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Dynamic.DynamicItem.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result"/>.</param>
            <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)</returns>
            <exception cref="T:System.NotSupportedException">No field of Sitecore info matches the name {0} for item {1}.Formatted(name, _item.Paths.FullPath)</exception>
        </member>
        <member name="T:Glass.Mapper.Sc.ExtensionMethods">
            <summary>
            Class ExtensionMethods
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Fields.File">
            <summary>
            Class File
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.File.Src">
            <summary>
            Gets the SRC.
            </summary>
            <value>The SRC.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.File.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Fields.HtmlEncodedString">
            <summary>
            Represents a string that will be HTML encoded
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Fields.Image">
            <summary>
            Class Image
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Alt">
            <summary>
            Gets or sets the alt.
            </summary>
            <value>The alt.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Border">
            <summary>
            Gets or sets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Class">
            <summary>
            Gets or sets the class.
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.HSpace">
            <summary>
            Gets or sets the H space.
            </summary>
            <value>The H space.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Src">
            <summary>
            Gets the SRC.
            </summary>
            <value>The SRC.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.VSpace">
            <summary>
            Gets or sets the V space.
            </summary>
            <value>The V space.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.MediaId">
            <summary>
            Gets or sets the media id.
            </summary>
            <value>The media id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Image.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:Glass.Mapper.Sc.Fields.Link">
            <summary>
            Class Link
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Anchor">
            <summary>
            Gets or sets the anchor.
            </summary>
            <value>The anchor.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Class">
            <summary>
            Gets or sets the class.
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.TargetId">
            <summary>
            Gets or sets the target id.
            </summary>
            <value>The target id.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Fields.Link.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Fields.LinkType">
            <summary>
            Enum LinkType
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.NotSet">
            <summary>
            The not set
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.Anchor">
            <summary>
            The anchor
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.External">
            <summary>
            The external
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.JavaScript">
            <summary>
            The java script
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.Internal">
            <summary>
            The internal
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.MailTo">
            <summary>
            The mail to
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.LinkType.Media">
            <summary>
            The media
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Fields.TriState">
            <summary>
            Enum TriState
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.TriState.Yes">
            <summary>
            The yes
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.TriState.No">
            <summary>
            The no
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Fields.TriState.Default">
            <summary>
            The default
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.GlassHtml">
            <summary>
            This class contains a set of helpers that make converting items mapped in Glass.Sitecore.Mapper to HTML
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.IGlassHtml">
            <summary>
            IGlassHtml
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.EditFrame(System.String,System.String)">
            <summary>
            Edits the frame.
            </summary>
            <param name="buttons">The buttons.</param>
            <param name="path">The path.</param>
            <returns>
            GlassEditFrame.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object)">
            <summary>
            Makes the field editable using the Sitecore Page Editor. Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="target">The target object that contains the item to be edited</param>
            <param name="field">The field that should be made editable</param>
            <param name="parameters">Additional rendering parameters, e.g. ImageParameters</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Object)">
            <summary>
            Makes the field editable using the Sitecore Page Editor. Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="target">The target object that contains the item to be edited</param>
            <param name="field">The field that should be made editable</param>
            <param name="standardOutput">The output to display when the Sitecore Page Editor is not being used</param>
            <param name="parameters">Additional rendering parameters, e.g. ImageParameters</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderImage``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <param name="field"></param>
            <param name="parameters"></param>
            <param name="isEditable"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.GetRenderingParameters``1(System.String,Sitecore.Data.ID)">
            <summary>
            Gets rendering parameters using the specified template.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="renderParametersTemplateId">The template used by the rendering parameters</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.GetRenderingParameters``1(System.String)">
            <summary>
            Converts rendering parameters to a concrete type. Use this method if you have defined the template ID on the 
            model configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.GetRenderingParameters``1(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Converts rendering parameters to a concrete type. Use this method if you have defined the template ID on the 
            model configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.GetRenderingParameters``1(System.Collections.Specialized.NameValueCollection,Sitecore.Data.ID)">
            <summary>
            Gets rendering parameters using the specified template.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <param name="renderParametersTemplateId">The template used by the rendering parameters</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderImage(Glass.Mapper.Sc.Fields.Image)">
            <summary>
            Renders HTML for an image
            </summary>
            <param name="image">The image to render</param>
            <returns>An img HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderImage(Glass.Mapper.Sc.Fields.Image,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Renders HTML for an image
            </summary>
            <param name="image">The image to render</param>
            <param name="attributes">Additional parameters to add. Do not include alt or src</param>
            <returns>An img HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderLink(Glass.Mapper.Sc.Fields.Link)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderLink(Glass.Mapper.Sc.Fields.Link,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <param name="attributes">Addtiional parameters to add. Do not include href or title</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.RenderLink(Glass.Mapper.Sc.Fields.Link,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <param name="attributes">Addtiional parameters to add. Do not include href or title</param>
            <param name="contents">Content to go in the link instead of the standard text</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.Editable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0)">
            <summary>
            Makes the field editable using the Sitecore Page Editor. Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="field">The field that should be made editable</param>
            <param name="target">The target object that contains the item to be edited</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.IGlassHtml.Editable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},``0)">
            <summary>
            Makes the field editable using the Sitecore Page Editor.  Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="field">The field that should be made editable</param>
            <param name="standardOutput">The output to display when the Sitecore Page Editor is not being used</param>
            <param name="target">The target object that contains the item to be edited</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.IGlassHtml.SitecoreContext">
            <summary>
            Gets the sitecore context.
            </summary>
            <value>
            The sitecore context.
            </value>
        </member>
        <member name="F:Glass.Mapper.Sc.GlassHtml.ImageWidth">
            <summary>
            The image width
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.GlassHtml.ImageHeight">
            <summary>
            The image height
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.GlassHtml.ImageTagFormat">
            <summary>
            The image tag format
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.#ctor(Glass.Mapper.Sc.ISitecoreContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.GlassHtml"/> class.
            </summary>
            <param name="sitecoreContext">The service that will be used to load and save data</param>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.EditFrame(System.String,System.String)">
            <summary>
            Edits the frame.
            </summary>
            <param name="buttons">The buttons.</param>
            <param name="path">The path.</param>
            <returns>
            GlassEditFrame.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object)">
            <summary>
            Makes the field editable using the Sitecore Page Editor. Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="target">The model object that contains the item to be edited</param>
            <param name="field">The field that should be made editable</param>
            <param name="parameters">Additional rendering parameters, e.g. ImageParameters</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Object)">
            <summary>
            Makes the field editable using the Sitecore Page Editor. Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="target">The model object that contains the item to be edited</param>
            <param name="field">The field that should be made editable</param>
            <param name="standardOutput">The output to display when the Sitecore Page Editor is not being used</param>
            <param name="parameters">Additional rendering parameters, e.g. ImageParameters</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.GetRenderingParameters``1(System.String)">
            <summary>
            Converts rendering parameters to a concrete type. Use this method if you have defined the template ID on the 
            model configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.GetRenderingParameters``1(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Converts rendering parameters to a concrete type. Use this method if you have defined the template ID on the 
            model configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderImage``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.AttributeCheck(System.Collections.Specialized.NameValueCollection,System.String,System.String)">
            <summary>
            Checks it and attribute is part of the NameValueCollection and updates it with the
            default if it isn't.
            </summary>
            <param name="collection">The collection of parameters</param>
            <param name="name">The name of the attribute in the collection</param>
            <param name="defaultValue">The default value for the attribute</param>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <param name="model">The model containing the link</param>
            <param name="field">An expression that points to the link</param>
            <param name="attributes">A collection of parameters to added to the link</param>
            <param name="isEditable">Indicate if the link should be editable in the page editor</param>
            <param name="contents">Content to go in the link</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.BeginRenderLink(Glass.Mapper.Sc.Fields.Link,System.Collections.Specialized.NameValueCollection,System.String,System.IO.TextWriter)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <param name="attributes">Addtiional parameters to add. Do not include href or title</param>
            <param name="contents">Content to go in the link instead of the standard text</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.MakeEditable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},``0,System.Object,Glass.Mapper.Context,Sitecore.Data.Database,System.IO.TextWriter)">
            <summary>
            Makes the editable.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="model">The model.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
            <exception cref="T:Glass.Mapper.MapperException">
            To many parameters in linq expression {0}.Formatted(field.Body)
            or
            Expression doesn't evaluate to a member {0}.Formatted(field.Body)
            or
            Page editting error. Could not find property {0} on type {1}.Formatted(memberExpression.Member.Name, config.Type.FullName)
            or
            Page editting error. Could not find data handler for property {2} {0}.{1}.Formatted(
                                    prop.DeclaringType, prop.Name, prop.MemberType)
            </exception>
            <exception cref="T:System.NullReferenceException">Context cannot be null</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderLink(Glass.Mapper.Sc.Fields.Link)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderLink(Glass.Mapper.Sc.Fields.Link,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <param name="attributes">Addtiional parameters to add. Do not include href or title</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderLink(Glass.Mapper.Sc.Fields.Link,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <param name="link">The link to render</param>
            <param name="attributes">Addtiional parameters to add. Do not include href or title</param>
            <param name="contents">Content to go in the link instead of the standard text</param>
            <returns>An "a" HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.Editable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0)">
            <summary>
            Makes the field editable using the Sitecore Page Editor. Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="field">The field that should be made editable</param>
            <param name="target">The model object that contains the item to be edited</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.Editable``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},``0)">
            <summary>
            Makes the field editable using the Sitecore Page Editor.  Using the specifed service to write data.
            </summary>
            <typeparam name="T">A class loaded by Glass.Sitecore.Mapper</typeparam>
            <param name="field">The field that should be made editable</param>
            <param name="standardOutput">The output to display when the Sitecore Page Editor is not being used</param>
            <param name="target">The model object that contains the item to be edited</param>
            <returns>HTML output to either render the editable controls or normal HTML</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderImage(Glass.Mapper.Sc.Fields.Image)">
            <summary>
            Renders HTML for an image
            </summary>
            <param name="image">The image to render</param>
            <returns>An img HTML element</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.GlassHtml.RenderImage(Glass.Mapper.Sc.Fields.Image,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Renders HTML for an image
            </summary>
            <param name="image">The image to render</param>
            <param name="attributes">Additional parameters to add. Do not include alt or src</param>
            <returns>An img HTML element</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.GlassHtml.SitecoreContext">
            <summary>
            Gets the sitecore context.
            </summary>
            <value>
            The sitecore context.
            </value>
        </member>
        <member name="P:Glass.Mapper.Sc.GlassHtml.IsInEditingMode">
            <summary>
            Indicates if the site is in editing mode
            </summary>
            <value><c>true</c> if this instance is in editing mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Global">
            <summary>
            Class Global
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.Global.PipeEncoding">
            <summary>
            Gets the pipe encoding.
            </summary>
            <value>The pipe encoding.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Global.Fields">
            <summary>
            Class Fields
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Global.Fields.DisplayName">
            <summary>
            The display name
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Global.IDs">
            <summary>
            Class IDs
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Global.IDs.TemplateFieldIds">
            <summary>
            Class TemplateFieldIds
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Global.IDs.TemplateFieldIds.QuickActionBarFieldId">
            <summary>
            The quick action bar field id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Global.IDs.TemplateFieldIds.ValidateButtonFieldId">
            <summary>
            The validate button field id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Global.IDs.TemplateFieldIds.ValidatorBarFieldId">
            <summary>
            The validator bar field id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Global.IDs.TemplateFieldIds.WorkflowFieldId">
            <summary>
            The workflow field id
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Global.IDs.TemplateFieldIds.IsRequiredId">
            <summary>
            The is required id
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.ISitecoreContext">
            <summary>
            Interface ISitecoreContext
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.ISitecoreService">
            <summary>
            Interface ISitecoreService
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.AddVersion``1(``0)">
            <summary>
            Adds a version of the item
            </summary>
            <typeparam name="T">The type being added. The type must have a property with the SitecoreIdAttribute.</typeparam>
            <param name="target">The class to add a version to</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Create``2(``1,``0,System.Boolean,System.Boolean)">
            <summary>
            Creates a new Sitecore item.
            </summary>
            <typeparam name="T">The type of the new item to create. This type must have either a TemplateId or BranchId defined on the SitecoreClassAttribute or fluent equivalent</typeparam>
            <typeparam name="TK">The type of the parent item</typeparam>
            <param name="parent">The parent of the new item to create. Must have the SitecoreIdAttribute or fluent equivalent</param>
            <param name="newItem">New item to create, must have the attribute SitecoreInfoAttribute of type SitecoreInfoType.Name or the fluent equivalent</param>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Create``2(``1,System.String,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Creates a new Sitecore item.
            </summary>
            <typeparam name="T">The type of the new item to create. This type must have either a TemplateId or BranchId defined on the SitecoreClassAttribute or fluent equivalent</typeparam>
            <typeparam name="TK">The type of the parent item</typeparam>
            <param name="parent">The parent of the new item to create. Must have the SitecoreIdAttribute or fluent equivalent</param>
            <param name="newName">The name of the new item</param>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateType(System.Type,Sitecore.Data.Items.Item,System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Object},System.Object[])">
            <summary>
            Creates the type.
            </summary>
            <param name="type">The type.</param>
            <param name="item">The item.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <param name="constructorParameters">Parameters to pass to the constructor of the new class. Must be in the order specified on the consturctor.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateType``1(Sitecore.Data.Items.Item,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="item">The item to load data from</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateType``2(Sitecore.Data.Items.Item,``1,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a single constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateType``3(Sitecore.Data.Items.Item,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a two constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateType``4(Sitecore.Data.Items.Item,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a two constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateType``5(Sitecore.Data.Items.Item,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a two constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateTypes(System.Type,System.Func{System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item}},System.Boolean,System.Boolean)">
            <summary>
            Create a collection of classes from the specified type
            </summary>
            <param name="isLazy">If true creates a proxy for each class</param>
            <param name="inferType">Infer the type to be loaded from the item template</param>
            <param name="type">The type to return</param>
            <param name="getItems">A function that returns the list of items to load</param>
            <returns>An enumerable of the items as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Delete``1(``0)">
            <summary>
            Delete an item from Sitecore
            </summary>
            <typeparam name="T">The type being deleted. The type must have a property with the SitecoreIdAttribute.</typeparam>
            <param name="item">The class to delete</param>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetDynamicItem(System.Guid)">
            <summary>
            Returns a dynamic item that can be used with the dynamic keyword
            </summary>
            <param name="id">The ID of the item to return</param>
            <returns>dynamic.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetDynamicItem(System.String)">
            <summary>
            Returns a dynamic item that can be used with the dynamic keyword
            </summary>
            <param name="path">The path of the item to return</param>
            <returns>dynamic.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetDynamicItem(Sitecore.Data.Items.Item)">
            <summary>
            Returns a dynamic item that can be used with the dynamic keyword
            </summary>
            <param name="item">The item to convert</param>
            <returns>dynamic.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">The path.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            ``0.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``3(System.String,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <typeparam name="TL"></typeparam>
            <param name="path">The path.</param>
            <param name="param1">The param1.</param>
            <param name="param2">The param2.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            ``0.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``4(System.String,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <typeparam name="TL"></typeparam>
            <typeparam name="TM"></typeparam>
            <param name="path">The path.</param>
            <param name="param1">The param1.</param>
            <param name="param2">The param2.</param>
            <param name="param3">The param3.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            ``0.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``5(System.String,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <typeparam name="TL"></typeparam>
            <typeparam name="TM"></typeparam>
            <typeparam name="TN"></typeparam>
            <param name="path">The path.</param>
            <param name="param1">The param1.</param>
            <param name="param2">The param2.</param>
            <param name="param3">The param3.</param>
            <param name="param4">The param4.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            ``0.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``2(System.String,``1,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <param name="path">The path.</param>
            <param name="param1">The param1.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            ``0.
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``1(System.String,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``2(System.String,Sitecore.Globalization.Language,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``3(System.String,Sitecore.Globalization.Language,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``4(System.String,Sitecore.Globalization.Language,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``5(System.String,Sitecore.Globalization.Language,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``1(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``2(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``3(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``4(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``5(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``1(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``2(System.Guid,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``3(System.Guid,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``4(System.Guid,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``5(System.Guid,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``1(System.Guid,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``2(System.Guid,Sitecore.Globalization.Language,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``3(System.Guid,Sitecore.Globalization.Language,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``4(System.Guid,Sitecore.Globalization.Language,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``5(System.Guid,Sitecore.Globalization.Language,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``1(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``2(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``3(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``4(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.GetItem``5(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Move``2(``0,``1)">
            <summary>
            Moves the specified item.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <param name="item">The item.</param>
            <param name="newParent">The new parent.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Query``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Query Sitecore for a set of items. Proxy classes are created.
            </summary>
            <typeparam name="T">The type to return the items as</typeparam>
            <param name="query">The query to execute</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>Sitecore items as proxy classes of the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Query``1(System.String,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Query Sitecore for a set of items. Proxy classes are created.
            </summary>
            <typeparam name="T">The type to return the items as</typeparam>
            <param name="query">The query to execute</param>
            <param name="language">The language of the items to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>Sitecore items as proxy classes of the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.QuerySingle``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Query Sitecore for a single item.
            </summary>
            <typeparam name="T">The type to return the items as</typeparam>
            <param name="query">The query to execute</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Save``1(``0,System.Boolean,System.Boolean)">
            <summary>
            Saves the specified target.
            </summary>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <typeparam name="T"></typeparam>
            <param name="target">The target.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.WriteToItem``1(``0,Sitecore.Data.Items.Item,System.Boolean,System.Boolean)">
            <summary>
            Writes to item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <param name="target">The object to read data from.</param>
            <param name="item">The item to write data to.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.Map``1(``0)">
            <summary>
            Map data from Sitecore to an existing Sitecore item. The configuration for the item must already be loaded.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target"></param>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateDataMappingContext(Glass.Mapper.AbstractTypeCreationContext,System.Object)">
            <summary>
            Creates the data mapping context.
            </summary>
            <param name="abstractTypeCreationContext">The abstract type creation context.</param>
            <param name="obj">The obj.</param>
            <returns>AbstractDataMappingContext.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.CreateDataMappingContext(Glass.Mapper.AbstractTypeSavingContext)">
            <summary>
            Creates the data mapping context.
            </summary>
            <param name="creationContext">The creation context.</param>
            <returns>AbstractDataMappingContext.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.InstantiateObject(Glass.Mapper.AbstractTypeCreationContext)">
            <summary>
            Instantiates the object.
            </summary>
            <param name="abstractTypeCreationContext">The abstract type creation context.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.SaveObject(Glass.Mapper.AbstractTypeSavingContext)">
            <summary>
            Saves the object.
            </summary>
            <param name="abstractTypeSavingContext">The abstract type saving context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreService.ResolveItem(System.Object)">
            <summary>
            Returns the item that the specific object relates to
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.ISitecoreService.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.ISitecoreService.GlassContext">
            <summary>
            Gets the glass context.
            </summary>
            <value>The glass context.</value>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetCurrentItem``1(System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The current item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetCurrentItem``2(``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetCurrentItem``3(``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetCurrentItem``4(``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetCurrentItem``5(``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetCurrentItem(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <param name="type">The type to return.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The current item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.QueryRelative``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Performs a query relative to the current item
            </summary>
            <typeparam name="T">The type to cast classes to</typeparam>
            <param name="query">The query.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>IEnumerable{``0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.QuerySingleRelative``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Performs a query relative to the current item
            </summary>
            <typeparam name="T">The type to cast classes to</typeparam>
            <param name="query">The query.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ISitecoreContext.GetHomeItem``1(System.Boolean,System.Boolean)">
            <summary>
            Gets the home item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>``0.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.ItemEditing">
            <summary>
            Class ItemEditing
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.ItemEditing.#ctor(Sitecore.Data.Items.Item,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.ItemEditing"/> class.
            </summary>
            <param name="item">The item.</param>
            <param name="disableSecurity">if set to <c>true</c> [disable security].</param>
        </member>
        <member name="M:Glass.Mapper.Sc.ItemEditing.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.ItemExtensions">
            <summary>
            Class ItemExtensions
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.ItemExtensions.GlassCast``1(Sitecore.Data.Items.Item,Glass.Mapper.Sc.ISitecoreService,System.Boolean,System.Boolean)">
            <summary>
            Casts and item to a strongly typed. .
            </summary>
            <typeparam name="T">Type to return</typeparam>
            <param name="item">Item to read from</param>
            <param name="service">The service.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>A strongly typed class representation of the item</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ItemExtensions.GlassCast``1(Sitecore.Data.Items.Item,System.Boolean,System.Boolean)">
            <summary>
            Casts and item to a strongly typed. Uses the default Context to load types.
            </summary>
            <typeparam name="T">Type to return</typeparam>
            <param name="item">Item to read from</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>A strongly typed class representation of the item</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.ItemExtensions.GlassRead``1(Sitecore.Data.Items.Item,``0)">
            <summary>
            Read from a class and write the data to an item. Ensure item is in editing state before calling.
            </summary>
            <typeparam name="T">The type of the class to read from.</typeparam>
            <param name="item">The item to write to</param>
            <param name="target">The class to read from</param>
        </member>
        <member name="T:Glass.Mapper.Sc.DisableItemHandler">
            <summary>
            Disables the itemhandler serializations
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.LazyItemEnumerable`1">
            <summary>
            Class LazyItemEnumerable
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.LazyItemEnumerable`1.#ctor(System.Func{System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item}},System.Boolean,System.Boolean,Glass.Mapper.Sc.ISitecoreService)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.LazyItemEnumerable`1"/> class.
            </summary>
            <param name="getItems">The get items.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <param name="service">The service.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.LazyItemEnumerable`1.ProcessItems">
            <summary>
            Processes the items.
            </summary>
            <returns>IEnumerable{`0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.LazyItemEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.LazyItemEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Pipelines.ConfigurationResolver.TemplateInferredTypeTask">
            <summary>
            TemplateInferredTypeTask
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Pipelines.ConfigurationResolver.TemplateInferredTypeTask.Execute(Glass.Mapper.Pipelines.ConfigurationResolver.ConfigurationResolverArgs)">
            <summary>
            Executes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Pipelines.Initialise.CodeFirstInitialise">
            <summary>
            CodeFirstInitialise
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Pipelines.Initialise.CodeFirstInitialise.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Pipelines.ObjectConstruction.CreateDynamicTask">
            <summary>
            CreateDynamicTask
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Pipelines.ObjectConstruction.CreateDynamicTask.Execute(Glass.Mapper.Pipelines.ObjectConstruction.ObjectConstructionArgs)">
            <summary>
            Executes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.Profilers.SitecoreProfiler">
            <summary>
            Class SitecoreProfiler
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Profilers.SitecoreProfiler.Start(System.String)">
            <summary>
            Starts the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Profilers.SitecoreProfiler.End(System.String)">
            <summary>
            Ends the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:Glass.Mapper.Sc.RenderField.AbstractParameters">
            <summary>
            Base class for rendering parameters that will be passed to the renderField pipeline.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.RenderField.AbstractParameters.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.AbstractParameters.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.RenderField.DateParameters">
            <summary>
            Used for specifying rendering parameters for a Date or Datetime field when outputting through a field renderer.
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.DateParameters.FORMAT">
            <summary>
            The FORMAT
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.DateParameters.Format">
            <summary>
            Gets or sets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.RenderField.ImageParameters">
            <summary>
            Used for specifying rendering parameters for an Image field when outputting through a field renderer.
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.OUTPUT_METHOD">
            <summary>
            The OUTPU t_ METHOD
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.ALT">
            <summary>
            The ALT
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.BORDER">
            <summary>
            The BORDER
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.HSPACE">
            <summary>
            The HSPACE
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.VSPACE">
            <summary>
            The VSPACE
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.CLASS">
            <summary>
            The CLASS
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.ALLOW_STRETCH">
            <summary>
            The ALLO w_ STRETCH
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.IGNORE_ASPECT_RATIO">
            <summary>
            The IGNOR e_ ASPEC t_ RATIO
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.WIDTH">
            <summary>
            The WIDTH
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.HEIGHT">
            <summary>
            The HEIGHT
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.SCALE">
            <summary>
            The SCALE
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.MAX_WIDTH">
            <summary>
            The MA x_ WIDTH
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.MAX_HEIGHT">
            <summary>
            The MA x_ HEIGHT
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.THUMBNAIL">
            <summary>
            The THUMBNAIL
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.BACKGROUND_COLOR">
            <summary>
            The BACKGROUN d_ COLOR
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.DATABASE">
            <summary>
            The DATABASE
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.LANGUAGE">
            <summary>
            The LANGUAGE
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.VERSION">
            <summary>
            The VERSION
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageParameters.DISABLE_MEDIA_CACHE">
            <summary>
            The DISABL e_ MEDI a_ CACHE
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.OutputMethod">
            <summary>
            Gets or sets the output method.
            </summary>
            <value>The output method.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Alt">
            <summary>
            Gets or sets the alt.
            </summary>
            <value>The alt.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Border">
            <summary>
            Gets or sets the border.
            </summary>
            <value>The border.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.HSpace">
            <summary>
            Gets or sets the H space.
            </summary>
            <value>The H space.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.VSpace">
            <summary>
            Gets or sets the V space.
            </summary>
            <value>The V space.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Class">
            <summary>
            Gets or sets the class.
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.AllowStretch">
            <summary>
            Gets or sets a value indicating whether [allow stretch].
            </summary>
            <value><c>true</c> if [allow stretch]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.IgnoreAspectRatio">
            <summary>
            Gets or sets a value indicating whether [ignore aspect ratio].
            </summary>
            <value><c>true</c> if [ignore aspect ratio]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.MaxWidth">
            <summary>
            Gets or sets the width of the max.
            </summary>
            <value>The width of the max.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.MaxHeight">
            <summary>
            Gets or sets the height of the max.
            </summary>
            <value>The height of the max.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Thumbnail">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Glass.Mapper.Sc.RenderField.ImageParameters"/> is thumbnail.
            </summary>
            <value><c>true</c> if thumbnail; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.ImageParameters.DisableMediaCache">
            <summary>
            Gets or sets a value indicating whether [disable media cache].
            </summary>
            <value><c>true</c> if [disable media cache]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.RenderField.ImageOutputMethod">
            <summary>
            Enum ImageOutputMethod
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageOutputMethod.Html">
            <summary>
            The HTML
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.ImageOutputMethod.XHtml">
            <summary>
            The X HTML
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.RenderField.LinkParameters">
            <summary>
            Used for specifying rendering parameters for a General Link field when outputting through a field renderer.
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.LinkParameters.TARGET">
            <summary>
            The TARGET
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.LinkParameters.TITLE">
            <summary>
            The TITLE
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.LinkParameters.CLASS">
            <summary>
            The CLASS
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.RenderField.LinkParameters.TEXT">
            <summary>
            The TEXT
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.LinkParameters.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.LinkParameters.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.LinkParameters.Class">
            <summary>
            Gets or sets the class.
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.RenderField.LinkParameters.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.SitecoreContext">
            <summary>
            Class SitecoreContext
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.SitecoreService">
            <summary>
            Class SitecoreService
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.#ctor(Sitecore.Data.Database,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreService"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="contextName">Name of the context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreService"/> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="contextName">Name of the context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.#ctor(System.String,Glass.Mapper.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreService"/> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.#ctor(Sitecore.Data.Database,Glass.Mapper.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreService"/> class.
            </summary>
            <param name="database">The database.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.AddVersion``1(``0)">
            <summary>
            Adds a version of the item
            </summary>
            <typeparam name="T">The type being added. The type must have a property with the SitecoreIdAttribute.</typeparam>
            <param name="target">The class to add a version to</param>
            <returns>``0.</returns>
            <exception cref="T:System.NullReferenceException">Can not add version, could not find configuration for {0}.Formatted(typeof(T).FullName)</exception>
            <exception cref="T:Glass.Mapper.MapperException">Could not add version, item not found</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.Create``2(``1,``0,System.Boolean,System.Boolean)">
            <summary>
            Creates a new Sitecore item.
            </summary>
            <typeparam name="T">The type of the new item to create. This type must have either a TemplateId or BranchId defined on the SitecoreClassAttribute or fluent equivalent</typeparam>
            <typeparam name="TK">The type of the parent item</typeparam>
            <param name="parent">The parent of the new item to create. Must have the SitecoreIdAttribute or fluent equivalent</param>
            <param name="newItem">New item to create, must have the attribute SitecoreInfoAttribute of type SitecoreInfoType.Name or the fluent equivalent</param>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <returns>``0.</returns>
            <exception cref="T:Glass.Mapper.MapperException">
            Failed to find configuration for new item type {0}.Formatted(typeof(T).FullName)
            or
            Failed to find configuration for parent item type {0}.Formatted(typeof(K).FullName)
            or
            Could not find parent item
            or
            The type {0} does not have a property with attribute SitecoreInfo(SitecoreInfoType.Name).Formatted(newType.Type.FullName)
            or
            Type {0} does not have a Template ID or Branch ID.Formatted(typeof(T).FullName)
            or
            Failed to create item
            </exception>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateType``1(Sitecore.Data.Items.Item,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <param name="item">The item to load data from</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateType``2(Sitecore.Data.Items.Item,``1,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a single constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateType``3(Sitecore.Data.Items.Item,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a two constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateType``4(Sitecore.Data.Items.Item,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a two constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateType``5(Sitecore.Data.Items.Item,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Creates a class from the specified item with a two constructor parameter
            </summary>
            <typeparam name="T">The type to return</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="item">The item to load data from</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">If true creates a proxy for the class</param>
            <param name="inferType">Infer the type to be loaded from the template</param>
            <returns>The item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateTypes(System.Type,System.Func{System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item}},System.Boolean,System.Boolean)">
            <summary>
            Create a collection of classes from the specified type
            </summary>
            <param name="isLazy">If true creates a proxy for each class</param>
            <param name="inferType">Infer the type to be loaded from the item template</param>
            <param name="type">The type to return</param>
            <param name="getItems">A function that returns the list of items to load</param>
            <returns>An enumerable of the items as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.Delete``1(``0)">
            <summary>
            Delete an item from Sitecore
            </summary>
            <typeparam name="T">The type being deleted. The type must have a property with the SitecoreIdAttribute.</typeparam>
            <param name="item">The class to delete</param>
            <exception cref="T:Glass.Mapper.MapperException">Item not found</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetDynamicItem(System.Guid)">
            <summary>
            Returns a dynamic item that can be used with the dynamic keyword
            </summary>
            <param name="id">The ID of the item to return</param>
            <returns>dynamic.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetDynamicItem(System.String)">
            <summary>
            Returns a dynamic item that can be used with the dynamic keyword
            </summary>
            <param name="path">The path of the item to return</param>
            <returns>dynamic.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetDynamicItem(Sitecore.Data.Items.Item)">
            <summary>
            Returns a dynamic item that can be used with the dynamic keyword
            </summary>
            <param name="item">The item to convert</param>
            <returns>dynamic.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="path">The path.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``2(System.String,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``3(System.String,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="K">The type of the first constructor parameter</typeparam>
            <typeparam name="L">The type of the second constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>
            The Sitecore item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``4(System.String,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="K">The type of the first constructor parameter</typeparam>
            <typeparam name="L">The type of the second constructor parameter</typeparam>
            <typeparam name="M">The type of the third constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``5(System.String,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="K">The type of the first constructor parameter</typeparam>
            <typeparam name="L">The type of the second constructor parameter</typeparam>
            <typeparam name="M">The type of the third constructor parameter</typeparam>
            <typeparam name="N">The type of the fourth constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``1(System.String,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``2(System.String,Sitecore.Globalization.Language,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``3(System.String,Sitecore.Globalization.Language,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``4(System.String,Sitecore.Globalization.Language,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``5(System.String,Sitecore.Globalization.Language,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``1(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``2(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``3(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``4(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``5(System.String,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="path">The path.</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``1(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Gets the item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id">The id.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``2(System.Guid,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``3(System.Guid,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``4(System.Guid,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``5(System.Guid,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``1(System.Guid,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``2(System.Guid,Sitecore.Globalization.Language,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``3(System.Guid,Sitecore.Globalization.Language,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``4(System.Guid,Sitecore.Globalization.Language,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``5(System.Guid,Sitecore.Globalization.Language,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``1(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``2(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``3(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``4(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.GetItem``5(System.Guid,Sitecore.Globalization.Language,Sitecore.Data.Version,``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieve a Sitecore item as the specified type.
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="id">The ID of the Sitecore item</param>
            <param name="language">The language of the item to return</param>
            <param name="version">The version of the item to return</param>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.Move``2(``0,``1)">
            <summary>
            Moves the specified item.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TK"></typeparam>
            <param name="item">The item.</param>
            <param name="newParent">The new parent.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.Query``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Query Sitecore for a set of items. Proxy classes are created.
            </summary>
            <typeparam name="T">The type to return the items as</typeparam>
            <param name="query">The query to execute</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>Sitecore items as proxy classes of the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.Query``1(System.String,Sitecore.Globalization.Language,System.Boolean,System.Boolean)">
            <summary>
            Query Sitecore for a set of items. Proxy classes are created.
            </summary>
            <typeparam name="T">The type to return the items as</typeparam>
            <param name="query">The query to execute</param>
            <param name="language"></param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>Sitecore items as proxy classes of the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.QuerySingle``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Query Sitecore for a single item.
            </summary>
            <typeparam name="T">The type to return the items as</typeparam>
            <param name="query">The query to execute</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.Save``1(``0,System.Boolean,System.Boolean)">
            <summary>
            Saves the specified target.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="target">The target.</param>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <exception cref="T:System.NullReferenceException">Can not save class, could not find configuration for {0}.Formatted(typeof(T).FullName)</exception>
            <exception cref="T:Glass.Mapper.MapperException">Could not save class, item not found</exception>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.WriteToItem``1(``0,Sitecore.Data.Items.Item,System.Boolean,System.Boolean)">
            <summary>
            Writes to item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="updateStatistics">Indicates if the items stats should be updated when the item is saved</param>
            <param name="silent">If set to true, no events will be raised due to saving.</param>
            <param name="target">The target.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateDataMappingContext(Glass.Mapper.AbstractTypeCreationContext,System.Object)">
            <summary>
            Creates the data mapping context.
            </summary>
            <param name="abstractTypeCreationContext">The abstract type creation context.</param>
            <param name="obj">The obj.</param>
            <returns>AbstractDataMappingContext.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreService.CreateDataMappingContext(Glass.Mapper.AbstractTypeSavingContext)">
            <summary>
            Used to create the context used by DataMappers to map data from a class
            </summary>
            <param name="creationContext">The Saving Context</param>
            <returns>AbstractDataMappingContext.</returns>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreService.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreContext"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.AbstractService"/> class.
            </summary>
            <param name="contextName">Name of the context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.#ctor(Glass.Mapper.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreContext"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.#ctor(Sitecore.Data.Database)">
            <summary>
            Used for unit tests only
            </summary>
            <param name="database"></param>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetHomeItem``1(System.Boolean,System.Boolean)">
            <summary>
            Gets the home item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.QueryRelative``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Performs a query relative to the current item
            </summary>
            <typeparam name="T">The type to cast classes to</typeparam>
            <param name="query">The query.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>IEnumerable{``0}.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.QuerySingleRelative``1(System.String,System.Boolean,System.Boolean)">
            <summary>
            Performs a query relative to the current item
            </summary>
            <typeparam name="T">The type to cast classes to</typeparam>
            <param name="query">The query.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>``0.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentDynamicItem">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <returns>
            The current item as the specified type
            </returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentItem(System.Type,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <param name="type">The type to return.</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The current item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentItem``1(System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return.</typeparam>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The current item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentItem``2(``1,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentItem``3(``1,``2,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentItem``4(``1,``2,``3,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreContext.GetCurrentItem``5(``1,``2,``3,``4,System.Boolean,System.Boolean)">
            <summary>
            Retrieves the current item as the specified type
            </summary>
            <typeparam name="T">The type to return the Sitecore item as</typeparam>
            <typeparam name="TK">The type of the first constructor parameter</typeparam>
            <typeparam name="TL">The type of the second constructor parameter</typeparam>
            <typeparam name="TM">The type of the third constructor parameter</typeparam>
            <typeparam name="TN">The type of the fourth constructor parameter</typeparam>
            <param name="param1">The value of the first parameter of the constructor</param>
            <param name="param2">The value of the second parameter of the constructor</param>
            <param name="param3">The value of the third parameter of the constructor</param>
            <param name="param4">The value of the fourth parameter of the constructor</param>
            <param name="isLazy">if set to <c>true</c> [is lazy].</param>
            <param name="inferType">if set to <c>true</c> [infer type].</param>
            <returns>The Sitecore item as the specified type</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.SitecoreDataMappingContext">
            <summary>
            Class SitecoreDataMappingContext
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.SitecoreDataMappingContext.#ctor(System.Object,Sitecore.Data.Items.Item,Glass.Mapper.Sc.ISitecoreService)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.SitecoreDataMappingContext"/> class.
            </summary>
            <param name="obj">The obj.</param>
            <param name="item">The item.</param>
            <param name="service">The service.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreDataMappingContext.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreDataMappingContext.Service">
            <summary>
            Gets the service.
            </summary>
            <value>The service.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.SitecoreTypeCreationContext">
            <summary>
            Class SitecoreTypeCreationContext
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreTypeCreationContext.TemplateId">
            <summary>
            Gets or sets the templateid.
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreTypeCreationContext.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreTypeCreationContext.SitecoreService">
            <summary>
            Gets or sets the sitecore service.
            </summary>
            <value>The sitecore service.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.SitecoreTypeSavingContext">
            <summary>
            Class SitecoreTypeSavingContext
            </summary>
        </member>
        <member name="P:Glass.Mapper.Sc.SitecoreTypeSavingContext.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Utilities">
            <summary>
            Class Utilities
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.ConvertAttributes(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Converts a NameValueCollection in to HTML attributes
            </summary>
            <param name="attributes">A list of attributes to convert</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.CreateUrlOptions(Glass.Mapper.Sc.Configuration.SitecoreInfoUrlOptions)">
            <summary>
            Creates the URL options.
            </summary>
            <param name="urlOptions">The URL options.</param>
            <returns>UrlOptions.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.CreateGenericType(System.Type,System.Type[],System.Object[])">
            <summary>
            Creates the type of the generic.
            </summary>
            <param name="type">The generic type to create e.g. List&lt;&gt;</param>
            <param name="arguments">The list of subtypes for the generic type, e.g string in List&lt;string&gt;</param>
            <param name="parameters">List of parameters to pass to the constructor.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.GetField(Sitecore.Data.Items.Item,Sitecore.Data.ID,System.String)">
            <summary>
            Gets the field.
            </summary>
            <param name="item">The item.</param>
            <param name="fieldId">The field id.</param>
            <param name="fieldName">Name of the field.</param>
            <returns>Field.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.ConstructQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Constructs the query string.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.GetGenericOuter(System.Type)">
            <summary>
            Gets the generic outer.
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.GetLanguageItem(Sitecore.Data.Items.Item,Sitecore.Globalization.Language)">
            <summary>
            Gets the language item.
            </summary>
            <param name="foundItem">The found item.</param>
            <param name="language">The language.</param>
            <returns>Item.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Utilities.GetLanguageItems(System.Collections.Generic.IEnumerable{Sitecore.Data.Items.Item},Sitecore.Globalization.Language)">
            <summary>
            Gets the language items.
            </summary>
            <param name="foundItems">The found items.</param>
            <param name="language">The language.</param>
            <returns>IEnumerable{Item}.</returns>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage">
            <summary>
            Class AbstractGlassPage
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.#ctor(Glass.Mapper.Sc.ISitecoreContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">The model.</param>
            <param name="field">The field.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">The model.</param>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.RenderImage``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.BeginRenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Render HTML for a link with contents
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.RenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <param name="contents">Content to override the default decription or item name</param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.SitecoreContext">
            <summary>
            Represents the current Sitecore context
            </summary>
            <value>The sitecore context.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.IsInEditingMode">
            <summary>
            Gets a value indicating whether this instance is in editing mode.
            </summary>
            <value><c>true</c> if this instance is in editing mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.GlassHtml">
            <summary>
            Access to rendering helpers
            </summary>
            <value>The glass HTML.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassPage.LayoutItem">
            <summary>
            Returns either the item specified by the DataSource or the current context item
            </summary>
            <value>The layout item.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl">
            <summary>
            Class AbstractGlassUserControl
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.#ctor(Glass.Mapper.Sc.ISitecoreContext,Glass.Mapper.Sc.IGlassHtml)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">The model.</param>
            <param name="field">The field.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">The model.</param>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.RenderImage``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.BeginRenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Render HTML for a link with contents
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.RenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <param name="contents">Content to override the default decription or item name</param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.IsInEditingMode">
            <summary>
            Gets a value indicating whether this instance is in editing mode.
            </summary>
            <value><c>true</c> if this instance is in editing mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.SitecoreContext">
            <summary>
            Represents the current Sitecore context
            </summary>
            <value>The sitecore context.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.GlassHtml">
            <summary>
            Access to rendering helpers
            </summary>
            <value>The glass HTML.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.DataSource">
            <summary>
            The custom data source for the sublayout
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl.LayoutItem">
            <summary>
            Returns either the item specified by the DataSource or the current context item
            </summary>
            <value>The layout item.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl">
            <summary>
                Class AbstractGlassUserControl
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.#ctor(Glass.Mapper.Sc.ISitecoreContext,Glass.Mapper.Sc.IGlassHtml)">
            <summary>
                Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="glassHtml"></param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.AbstractGlassUserControl"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object)">
            <summary>
                Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">The model.</param>
            <param name="field">The field.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.Editable``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Object)">
            <summary>
                Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model">The model.</param>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.RenderImage``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
                Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.BeginRenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean)">
            <summary>
                Render HTML for a link with contents
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.RenderLink``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
                Render HTML for a link
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <param name="contents">Content to override the default decription or item name</param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.IsInEditingMode">
            <summary>
                Gets a value indicating whether this instance is in editing mode.
            </summary>
            <value>
                <c>true</c> if this instance is in editing mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.SitecoreContext">
            <summary>
                Represents the current Sitecore context
            </summary>
            <value>The sitecore context.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.GlassHtml">
            <summary>
                Access to rendering helpers
            </summary>
            <value>The glass HTML.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.DataSource">
            <summary>
                The custom data source for the sublayout
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.LayoutItem">
            <summary>
                Returns either the item specified by the DataSource or the current context item
            </summary>
            <value>The layout item.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.AbstractGlassWebControl.DataSourceItem">
            <summary>
            The Sitecore Item pulled from either the DataSource or Context.
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1">
            <summary>
                Class GlassUserControl
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.#ctor(Glass.Mapper.Sc.ISitecoreContext,Glass.Mapper.Sc.IGlassHtml)">
            <summary>
                Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.GetModel">
            <summary>
                Gets the model.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.OnLoad(System.EventArgs)">
            <summary>
                Raises the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name="e">
                The <see cref="T:System.EventArgs" /> object that contains the event data.
            </param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.Editable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
                Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <param name="field">The field.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.Editable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Object)">
            <summary>
                Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.RenderImage(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean)">
            <summary>
                Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.BeginRenderLink(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean)">
            <summary>
                Render HTML for a link with contents
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.RenderLink(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
                Render HTML for a link
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <param name="contents">Content to override the default decription or item name</param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.Model">
            <summary>
                Model to render on the sublayout
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.InferType">
            <summary>
                Gets or sets a value indicating whether [infer type].
            </summary>
            <value>
                <c>true</c> if [infer type]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassWebControl`1.IsLazy">
            <summary>
                Gets or sets a value indicating whether this instance is lazy.
            </summary>
            <value>
                <c>true</c> if this instance is lazy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.GlassDynamicPage">
            <summary>
            Class GlassDynamicPage
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassDynamicPage.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassDynamicPage.Model">
            <summary>
            Model to render on the sublayout
            </summary>
            <value>The model.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.GlassDynamicUserControl">
            <summary>
            Class GlassDynamicUserControl
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassDynamicUserControl.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassDynamicUserControl.Model">
            <summary>
            Model to render on the sublayout
            </summary>
            <value>The model.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.GlassEditFrame">
            <summary>
            Class GlassEditFrame
            </summary>
        </member>
        <member name="F:Glass.Mapper.Sc.Web.Ui.GlassEditFrame.DefaultEditButtons">
            <summary>
            The default edit buttons
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassEditFrame.#ctor(System.String,System.IO.TextWriter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassEditFrame"/> class.
            </summary>
            <param name="buttons">The buttons.</param>
            <param name="writer">The writer.</param>
            <param name="dataSource">The data source.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassEditFrame.#ctor(Sitecore.Web.UI.WebControls.EditFrame)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassEditFrame"/> class.
            </summary>
            <param name="frame">The frame.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassEditFrame.RenderFirstPart">
            <summary>
            Renders the first part.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassEditFrame.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.GlassPage`1">
            <summary>
            Class GlassPage
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.#ctor(Glass.Mapper.Sc.ISitecoreContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassPage`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassPage`1"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.Editable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <param name="field">The field.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.Editable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.RenderImage(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.BeginRenderLink(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Render HTML for a link with contents
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassPage`1.RenderLink(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <param name="contents">Content to override the default decription or item name</param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassPage`1.Model">
            <summary>
            Model to render on the sublayout
            </summary>
            <value>The model.</value>
        </member>
        <member name="T:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1">
            <summary>
            Class GlassUserControl
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.#ctor(Glass.Mapper.Sc.ISitecoreContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1"/> class.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.GetModel">
            <summary>
            Gets the model.
            </summary>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data.</param>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.Editable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <param name="field">The field.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.Editable(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`0,System.String}},System.Object)">
            <summary>
            Makes a field editable via the Page Editor. Use the Model property as the target item, e.g. model =&gt; model.Title where Title is field name.
            </summary>
            <param name="field">The field.</param>
            <param name="standardOutput">The standard output.</param>
            <param name="parameters">The parameters.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.RenderImage(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Renders an image allowing simple page editor support
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model that contains the image field</param>
            <param name="field">A lambda expression to the image field, should be of type Glass.Mapper.Sc.Fields.Image</param>
            <param name="parameters">Image parameters, e.g. width, height</param>
            <param name="isEditable">Indicates if the field should be editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.BeginRenderLink(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean)">
            <summary>
            Render HTML for a link with contents
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <returns></returns>
        </member>
        <member name="M:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.RenderLink(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Boolean,System.String)">
            <summary>
            Render HTML for a link
            </summary>
            <typeparam name="T">The model type</typeparam>
            <param name="model">The model</param>
            <param name="field">The link field to user</param>
            <param name="attributes">Any additional link attributes</param>
            <param name="isEditable">Make the link editable</param>
            <param name="contents">Content to override the default decription or item name</param>
            <returns></returns>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.Model">
            <summary>
            Model to render on the sublayout
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.InferType">
            <summary>
            Gets or sets a value indicating whether [infer type].
            </summary>
            <value>
              <c>true</c> if [infer type]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Glass.Mapper.Sc.Web.Ui.GlassUserControl`1.IsLazy">
            <summary>
            Gets or sets a value indicating whether this instance is lazy.
            </summary>
            <value>
              <c>true</c> if this instance is lazy; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Glass.Mapper.Sc.Configuration.SitecorePropertyConfiguration">
            <summary>
            Class SitecorePropertyConfiguration
            </summary>
        </member>
    </members>
</doc>
